/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
  /*To convert from our default root size of 10px all I have to do is divide the default font-size (16px), by my desired font size (10px) */
  /* 1rem = 10px; 10px/16px = 62.5% */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba(126, 213, 111, 0.8),
      rgb(39, 180, 133, 0.8)
    ),
    url(../img/herobeach.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 20rem;
}

.header__text-box {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  /* Absolute/Relative positioning relates to the PARENT ELEMENT */
  /* transform: translate() relates to the ELEMENT ITSELF */
  text-align: center;
  /* text align to center ALL the text-box's text */
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* backface-visibllity is used to prevent the text from flickering when the animation is applied */
  margin-bottom: 3.5rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 2rem;

  animation: moveInLeft 2.5s ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 2.1rem;
  font-weight: 700;
  letter-spacing: 1.3rem;

  animation: moveInRight 2.5s ease-out;
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*keyframes for the button's popout animation */
@keyframes popout {
  0% {
    transform: scaleX(1) scaleY(1);
    opacity: 1;
  }
  100% {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
}

/* keyframes for the button's fade-in animation */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;

  padding: 2rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  position: relative;
  /* background-color: #fff;
  color: #777; */
  transition: transform 0.3s, box-shadow 0.3s;
  font-size: 1.6rem;
}

.btn:hover {
  /* Keep the hover effect */
  transform: translateY(-0.3rem);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:focus {
  outline: none; /* Removes the outline on focus */
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: none; /* No transition on the pseudo-element */
}

/* Trigger animation when the button is focused */
.btn:focus::after {
  background-color: #fff;
  animation: popout 0.75s forwards;
}

.btn--animated {
  animation: moveInBottom 1.65s ease-out 0.75s;
  /* Animation starts 0.75s after page load */
  animation-fill-mode: backwards;
  /* Starts animation from beginning */
}
