/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}

html {
  font-size: 62.5%;
  /*To convert from our default root size of 10px all I have to do is divide the default font-size (16px), by my desired font size (10px) */
  /* 1rem = 10px; 10px/16px = 62.5% */
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: $color-grey-dark;
  padding: 3rem;
  box-sizing: border-box;
}

.header {
  height: 95vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/herobeach.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);

  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
  }

  &__logo {
    height: 20rem;
  }

  &__text-box {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
    /* text align to center ALL the text-box's text */
  }
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;
  backface-visibility: hidden;
  /* backface-visibllity is used to prevent the text from flickering when the animation is applied */
  margin-bottom: 3.5rem;

  &--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 2rem;

    animation: moveInLeft 2.5s ease-out;
  }

  &--sub {
    display: block;
    font-size: 2.1rem;
    font-weight: 700;
    letter-spacing: 1.3rem;

    animation: moveInRight 2.5s ease-out;
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(10rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(-10rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/*keyframes for the button's popout animation */
@keyframes popout {
  0% {
    transform: scaleX(1) scaleY(1);
    opacity: 1;
  }
  100% {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
  }
}

/* keyframes for the button's fade-in animation */
@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;

    padding: 2rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    position: relative;
    transition: transform 0.3s, box-shadow 0.3s;
    font-size: 1.6rem;
  }

  &:hover {
    /* Keep the hover effect */
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
  }

  &::after {
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: none;
  }

  &:focus {
    outline: none; /* Removes the outline on focus */
    &::after {
      background-color: $color-white;
      animation: popout 0.75s forwards;
    }
  }

  &--white {
    background-color: $color-white;
    color: $color-grey-dark;
  }

  &--animated {
    animation: moveInBottom 1.65s ease-out 0.75s;
    /* Animation starts 0.75s after page load */
    animation-fill-mode: backwards;
    /* Starts animation from beginning */
  }
}
